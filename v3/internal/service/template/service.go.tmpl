package {{.Name}}

import (
	"github.com/wailsapp/wails/v3/pkg/application"
)

// ---------------- Service Setup ----------------
// This is the main service struct. It can be named anything you like.
// Both the OnStartup() and OnShutdown() methods are called synchronously when the app starts and stops.
// Changing the name of this struct will change the name of the services class in the frontend 
// Bound methods will exist inside frontend/bindings/github.com/user/{{.Name}} under the name of the struct
type MyService struct{}

// OnStartup is called when the app is starting up. You can use this to
// initialise any resources you need. You can also access the application
// instance via the app property.
func (p *MyService) OnStartup() error {
	return nil
}

// Shutdown is called when the app is shutting down via runtime.Quit() call
// You can use this to clean up any resources you have allocated
func (p *MyService) OnShutdown() error {}

// ---------------- Service Methods ----------------
// Service methods are just normal Go methods. You can add as many as you like.
// The only requirement is that they are exported (start with a capital letter).
// You can also return any type that is JSON serializable.
// See https://golang.org/pkg/encoding/json/#Marshal for more information.

func (p *MyService) Greet(name string) string {
    return "Hello " + name
}
